import{_ as i,c as a,o as e,a2 as o}from"./chunks/framework.B9LQZ38X.js";const m=JSON.parse('{"title":"前端工程化大纲","description":"","frontmatter":{"title":"前端工程化大纲"},"headers":[],"relativePath":"engineering/index.md","filePath":"engineering/index.md"}'),t={name:"engineering/index.md"};function r(n,l,u,h,d,s){return e(),a("div",null,l[0]||(l[0]=[o('<h1 id="前端工程化大纲" tabindex="-1">前端工程化大纲 <a class="header-anchor" href="#前端工程化大纲" aria-label="Permalink to &quot;前端工程化大纲&quot;">​</a></h1><h2 id="一、前端工程化概述" tabindex="-1"><a href="./overview.html">一、前端工程化概述</a> <a class="header-anchor" href="#一、前端工程化概述" aria-label="Permalink to &quot;[一、前端工程化概述](./overview.md)&quot;">​</a></h2><ol><li>什么是前端工程化</li><li>前端工程化的必要性</li><li>前端工程化的发展历程</li><li>现代前端工程化的核心目标</li></ol><h2 id="二、模块化开发" tabindex="-1"><a href="./module.html">二、模块化开发</a> <a class="header-anchor" href="#二、模块化开发" aria-label="Permalink to &quot;[二、模块化开发](./module.md)&quot;">​</a></h2><ol><li>JavaScript模块化 <ul><li>CommonJS</li><li>AMD/CMD</li><li>ES Module</li></ul></li><li>CSS模块化 <ul><li>CSS预处理器(Sass/Less/Stylus)</li><li>CSS Modules</li><li>CSS-in-JS</li></ul></li><li>资源模块化 <ul><li>图片、字体等资源的模块化处理</li></ul></li></ol><h2 id="三、包管理与依赖管理" tabindex="-1"><a href="./packmanage.html">三、包管理与依赖管理</a> <a class="header-anchor" href="#三、包管理与依赖管理" aria-label="Permalink to &quot;[三、包管理与依赖管理](./packmanage.md)&quot;">​</a></h2><ol><li>npm/yarn/pnpm <ul><li>包管理工具比较</li><li>依赖管理策略</li><li>lock文件的作用</li></ul></li><li>私有仓库搭建 <ul><li>Verdaccio</li><li>Nexus</li></ul></li><li>Monorepo管理 <ul><li>Lerna</li><li>pnpm workspace</li><li>Turborepo</li></ul></li></ol><h2 id="四、构建工具" tabindex="-1"><a href="./buildtools.html">四、构建工具</a> <a class="header-anchor" href="#四、构建工具" aria-label="Permalink to &quot;[四、构建工具](./buildtools.md)&quot;">​</a></h2><ol><li>构建工具发展历程</li><li>Webpack <ul><li>核心概念</li><li>配置详解</li><li>性能优化</li><li>插件系统</li></ul></li><li>Rollup</li><li>Vite/Esbuild/Snowpack</li><li>构建工具选型策略</li></ol><h2 id="五、代码规范与质量保障" tabindex="-1"><a href="./eslint.html">五、代码规范与质量保障</a> <a class="header-anchor" href="#五、代码规范与质量保障" aria-label="Permalink to &quot;[五、代码规范与质量保障](./eslint.md)&quot;">​</a></h2><ol><li>代码规范 <ul><li>ESLint</li><li>Stylelint</li><li>Prettier</li><li>EditorConfig</li></ul></li><li>代码质量 <ul><li>SonarQube</li><li>代码覆盖率</li></ul></li><li>Git规范 <ul><li>Git Hooks</li><li>Commitlint</li><li>分支管理策略</li></ul></li></ol><h2 id="六、自动化测试" tabindex="-1"><a href="./autotesting.html">六、自动化测试</a> <a class="header-anchor" href="#六、自动化测试" aria-label="Permalink to &quot;[六、自动化测试](./autotesting.md)&quot;">​</a></h2><ol><li>单元测试 <ul><li>Jest</li><li>Mocha</li><li>Vitest</li></ul></li><li>组件测试 <ul><li>React Testing Library</li><li>Vue Test Utils</li></ul></li><li>E2E测试 <ul><li>Cypress</li><li>Playwright</li><li>Puppeteer</li></ul></li><li>测试覆盖率 <ul><li>Istanbul</li><li>Jest coverage</li></ul></li></ol><h2 id="七、持续集成与部署-CI-CD-" tabindex="-1"><a href="./cicd.html">七、持续集成与部署(CI/CD)</a> <a class="header-anchor" href="#七、持续集成与部署-CI-CD-" aria-label="Permalink to &quot;[七、持续集成与部署(CI/CD)](./cicd.md)&quot;">​</a></h2><ol><li>CI/CD概念与流程</li><li>常用CI/CD工具 <ul><li>GitHub Actions</li><li>GitLab CI</li><li>Jenkins</li><li>Travis CI</li></ul></li><li>自动化部署策略 <ul><li>蓝绿部署</li><li>灰度发布</li><li>滚动更新</li></ul></li><li>部署平台 <ul><li>Docker容器化</li><li>Serverless部署</li><li>静态资源托管</li></ul></li></ol><h2 id="八、性能优化" tabindex="-1"><a href="./performance.html">八、性能优化</a> <a class="header-anchor" href="#八、性能优化" aria-label="Permalink to &quot;[八、性能优化](./performance.md)&quot;">​</a></h2><ol><li>构建性能优化 <ul><li>构建速度优化</li><li>产出物优化</li></ul></li><li>运行时性能优化 <ul><li>代码分割</li><li>懒加载</li><li>缓存策略</li><li>预加载/预渲染</li></ul></li><li>监控与分析 <ul><li>Lighthouse</li><li>Web Vitals</li><li>Performance API</li></ul></li></ol><h2 id="九、微前端架构" tabindex="-1"><a href="./microfrontend.html">九、微前端架构</a> <a class="header-anchor" href="#九、微前端架构" aria-label="Permalink to &quot;[九、微前端架构](./microfrontend.md)&quot;">​</a></h2><ol><li>微前端概念与适用场景</li><li>主流微前端方案 <ul><li>单一SPA</li><li>Qiankun</li><li>Module Federation</li><li>Web Components</li></ul></li><li>微前端实践中的问题与解决方案</li></ol><h2 id="十、工程化进阶" tabindex="-1"><a href="./advanced.html">十、工程化进阶</a> <a class="header-anchor" href="#十、工程化进阶" aria-label="Permalink to &quot;[十、工程化进阶](./advanced.md)&quot;">​</a></h2><ol><li>低代码平台建设</li><li>组件库/工具链开发</li><li>脚手架开发 <ul><li>Yeoman</li><li>Plop</li><li>自定义CLI工具</li></ul></li><li>文档工具 <ul><li>Storybook</li><li>Docusaurus</li><li>Vitepress</li></ul></li></ol><h2 id="十一、前端工程化未来趋势" tabindex="-1"><a href="./future.html">十一、前端工程化未来趋势</a> <a class="header-anchor" href="#十一、前端工程化未来趋势" aria-label="Permalink to &quot;[十一、前端工程化未来趋势](./future.md)&quot;">​</a></h2><ol><li>构建工具演进方向</li><li>新标准与新特性</li><li>AI在前端工程化中的应用</li><li>全栈工程化趋势</li></ol><h2 id="十二、实战项目" tabindex="-1">十二、实战项目 <a class="header-anchor" href="#十二、实战项目" aria-label="Permalink to &quot;十二、实战项目&quot;">​</a></h2><ol><li>从零搭建企业级前端工程化方案</li><li>定制化脚手架开发</li><li>性能优化实战</li><li>CI/CD流水线搭建</li></ol>',25)]))}const f=i(t,[["render",r]]);export{m as __pageData,f as default};
