import{_ as a,c as i,o as e,a2 as r}from"./chunks/framework.B9LQZ38X.js";const c=JSON.parse('{"title":"计算机网络大纲","description":"","frontmatter":{"title":"计算机网络大纲"},"headers":[],"relativePath":"network/index.md","filePath":"network/index.md"}'),t={name:"network/index.md"};function o(h,l,n,d,s,u){return e(),i("div",null,l[0]||(l[0]=[r('<h1 id="前端工程师必备的计算机网络知识大纲" tabindex="-1">前端工程师必备的计算机网络知识大纲 <a class="header-anchor" href="#前端工程师必备的计算机网络知识大纲" aria-label="Permalink to &quot;前端工程师必备的计算机网络知识大纲&quot;">​</a></h1><h2 id="一、网络基础概念" tabindex="-1"><a href="./overview.html">一、网络基础概念</a> <a class="header-anchor" href="#一、网络基础概念" aria-label="Permalink to &quot;[一、网络基础概念](./overview.md)&quot;">​</a></h2><h3 id="_1-网络分层模型" tabindex="-1">1. 网络分层模型 <a class="header-anchor" href="#_1-网络分层模型" aria-label="Permalink to &quot;1. 网络分层模型&quot;">​</a></h3><ul><li><strong>OSI七层模型</strong>：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层</li><li><strong>TCP/IP四层模型</strong>：网络接口层、网际层、传输层、应用层</li><li><strong>前端相关层</strong>：主要关注应用层(HTTP/HTTPS/WebSocket)和传输层(TCP/UDP)</li></ul><h3 id="_2-关键网络协议" tabindex="-1">2. 关键网络协议 <a class="header-anchor" href="#_2-关键网络协议" aria-label="Permalink to &quot;2. 关键网络协议&quot;">​</a></h3><ul><li><strong>IP协议</strong>：网络层核心协议</li><li><strong>TCP/UDP</strong>：传输层协议对比</li><li><strong>HTTP/HTTPS</strong>：应用层协议</li><li><strong>DNS</strong>：域名解析系统</li></ul><h2 id="二、HTTP协议深度解析" tabindex="-1"><a href="./http.html">二、HTTP协议深度解析</a> <a class="header-anchor" href="#二、HTTP协议深度解析" aria-label="Permalink to &quot;[二、HTTP协议深度解析](./http.md)&quot;">​</a></h2><h3 id="_1-HTTP-1-x" tabindex="-1">1. HTTP/1.x <a class="header-anchor" href="#_1-HTTP-1-x" aria-label="Permalink to &quot;1. HTTP/1.x&quot;">​</a></h3><ul><li>请求/响应模型</li><li>报文结构(请求行/头/体)</li><li>常用方法(GET/POST/PUT/DELETE等)</li><li>状态码分类(1xx-5xx)</li><li>连接管理(短连接/长连接)</li></ul><h3 id="_2-HTTP-2" tabindex="-1">2. HTTP/2 <a class="header-anchor" href="#_2-HTTP-2" aria-label="Permalink to &quot;2. HTTP/2&quot;">​</a></h3><ul><li>二进制分帧</li><li>多路复用</li><li>头部压缩(HPACK)</li><li>服务器推送</li></ul><h3 id="_3-HTTP-3" tabindex="-1">3. HTTP/3 <a class="header-anchor" href="#_3-HTTP-3" aria-label="Permalink to &quot;3. HTTP/3&quot;">​</a></h3><ul><li>基于QUIC协议</li><li>0-RTT连接建立</li><li>改进的拥塞控制</li><li>前向纠错</li></ul><h2 id="三、HTTPS与安全" tabindex="-1"><a href="./https.html">三、HTTPS与安全</a> <a class="header-anchor" href="#三、HTTPS与安全" aria-label="Permalink to &quot;[三、HTTPS与安全](./https)&quot;">​</a></h2><h3 id="_1-加密基础" tabindex="-1">1. 加密基础 <a class="header-anchor" href="#_1-加密基础" aria-label="Permalink to &quot;1. 加密基础&quot;">​</a></h3><ul><li>对称加密(AES)</li><li>非对称加密(RSA)</li><li>哈希算法(SHA)</li></ul><h3 id="_2-TLS-SSL" tabindex="-1">2. TLS/SSL <a class="header-anchor" href="#_2-TLS-SSL" aria-label="Permalink to &quot;2. TLS/SSL&quot;">​</a></h3><ul><li>握手过程详解</li><li>证书验证机制</li><li>混合加密体系</li><li>会话恢复</li></ul><h3 id="_3-Web安全" tabindex="-1">3. Web安全 <a class="header-anchor" href="#_3-Web安全" aria-label="Permalink to &quot;3. Web安全&quot;">​</a></h3><ul><li>CORS机制</li><li>CSRF防护</li><li>XSS防御</li><li>CSP策略</li><li>HSTS</li></ul><h2 id="四、浏览器网络机制" tabindex="-1"><a href="./browser.html">四、浏览器网络机制</a> <a class="header-anchor" href="#四、浏览器网络机制" aria-label="Permalink to &quot;[四、浏览器网络机制](./browser)&quot;">​</a></h2><h3 id="_1-资源加载流程" tabindex="-1">1. 资源加载流程 <a class="header-anchor" href="#_1-资源加载流程" aria-label="Permalink to &quot;1. 资源加载流程&quot;">​</a></h3><ul><li>解析HTML构建DOM</li><li>预加载扫描器</li><li>关键渲染路径优化</li><li>资源优先级</li></ul><h3 id="_2-缓存机制" tabindex="-1">2. 缓存机制 <a class="header-anchor" href="#_2-缓存机制" aria-label="Permalink to &quot;2. 缓存机制&quot;">​</a></h3><ul><li><strong>强缓存</strong>：Cache-Control/Expires</li><li><strong>协商缓存</strong>：ETag/Last-Modified</li><li>Service Worker缓存</li><li>HTTP缓存决策树</li></ul><h3 id="_3-连接管理" tabindex="-1">3. 连接管理 <a class="header-anchor" href="#_3-连接管理" aria-label="Permalink to &quot;3. 连接管理&quot;">​</a></h3><ul><li>域名分片</li><li>并行连接限制</li><li>Keep-Alive机制</li><li>预连接(preconnect/prefetch)</li></ul><h2 id="五、WebSocket与实时通信" tabindex="-1"><a href="./websocket.html">五、WebSocket与实时通信</a> <a class="header-anchor" href="#五、WebSocket与实时通信" aria-label="Permalink to &quot;[五、WebSocket与实时通信](./websocket)&quot;">​</a></h2><h3 id="_1-WebSocket协议" tabindex="-1">1. WebSocket协议 <a class="header-anchor" href="#_1-WebSocket协议" aria-label="Permalink to &quot;1. WebSocket协议&quot;">​</a></h3><ul><li>握手过程</li><li>数据帧格式</li><li>心跳机制</li><li>错误处理</li></ul><h3 id="_2-替代方案对比" tabindex="-1">2. 替代方案对比 <a class="header-anchor" href="#_2-替代方案对比" aria-label="Permalink to &quot;2. 替代方案对比&quot;">​</a></h3><ul><li>短轮询(Polling)</li><li>长轮询(Long-Polling)</li><li>SSE(Server-Sent Events)</li><li>WebRTC</li></ul><h2 id="六、性能优化相关网络知识" tabindex="-1"><a href="./performance.html">六、性能优化相关网络知识</a> <a class="header-anchor" href="#六、性能优化相关网络知识" aria-label="Permalink to &quot;[六、性能优化相关网络知识](./performance)&quot;">​</a></h2><h3 id="_1-关键指标" tabindex="-1">1. 关键指标 <a class="header-anchor" href="#_1-关键指标" aria-label="Permalink to &quot;1. 关键指标&quot;">​</a></h3><ul><li>TTFB(Time To First Byte)</li><li>FP/FCP/FMP/LCP</li><li>DNS查询时间</li><li>TCP连接时间</li><li>SSL协商时间</li></ul><h3 id="_2-优化策略" tabindex="-1">2. 优化策略 <a class="header-anchor" href="#_2-优化策略" aria-label="Permalink to &quot;2. 优化策略&quot;">​</a></h3><ul><li>CDN加速</li><li>资源压缩(Brotli/gzip)</li><li>资源预加载</li><li>懒加载</li><li>HTTP/2服务器推送</li></ul><h2 id="七、前端调试与网络分析" tabindex="-1"><a href="./debug.html">七、前端调试与网络分析</a> <a class="header-anchor" href="#七、前端调试与网络分析" aria-label="Permalink to &quot;[七、前端调试与网络分析](./debug)&quot;">​</a></h2><h3 id="_1-开发者工具" tabindex="-1">1. 开发者工具 <a class="header-anchor" href="#_1-开发者工具" aria-label="Permalink to &quot;1. 开发者工具&quot;">​</a></h3><ul><li>Network面板详解</li><li>Waterfall图表分析</li><li>请求过滤与搜索</li><li>节流模拟</li></ul><h3 id="_2-常用工具" tabindex="-1">2. 常用工具 <a class="header-anchor" href="#_2-常用工具" aria-label="Permalink to &quot;2. 常用工具&quot;">​</a></h3><ul><li>Wireshark抓包分析</li><li>Charles/Fiddler代理</li><li>Postman/Insomnia API测试</li><li>WebPageTest性能测试</li></ul><h2 id="八、现代Web应用网络特性" tabindex="-1"><a href="./modern.html">八、现代Web应用网络特性</a> <a class="header-anchor" href="#八、现代Web应用网络特性" aria-label="Permalink to &quot;[八、现代Web应用网络特性](./modern)&quot;">​</a></h2><h3 id="_1-PWA网络能力" tabindex="-1">1. PWA网络能力 <a class="header-anchor" href="#_1-PWA网络能力" aria-label="Permalink to &quot;1. PWA网络能力&quot;">​</a></h3><ul><li>Service Worker缓存策略</li><li>离线体验</li><li>后台同步</li></ul><h3 id="_2-WebTransport" tabindex="-1">2. WebTransport <a class="header-anchor" href="#_2-WebTransport" aria-label="Permalink to &quot;2. WebTransport&quot;">​</a></h3><ul><li>基于QUIC的多路传输</li><li>不可靠数据传输</li><li>双向通信</li></ul><h3 id="_3-WebRTC" tabindex="-1">3. WebRTC <a class="header-anchor" href="#_3-WebRTC" aria-label="Permalink to &quot;3. WebRTC&quot;">​</a></h3><ul><li>STUN/TURN服务器</li><li>ICE候选收集</li><li>点对点连接建立</li></ul><h2 id="学习建议" tabindex="-1">学习建议 <a class="header-anchor" href="#学习建议" aria-label="Permalink to &quot;学习建议&quot;">​</a></h2><ol><li>结合浏览器开发者工具实践观察</li><li>使用Wireshark等工具分析实际网络流量</li><li>阅读RFC文档理解协议细节</li><li>关注新兴Web网络API发展</li></ol>',51)]))}const T=a(t,[["render",o]]);export{c as __pageData,T as default};
